version: '3.8'

services:
  # 1. Build image
  locoloot-builder:
    build:
      context: .
      args:
        DOCKER_BUILD_REQUIREMENTS: requirements.dev.txt
    image: locoloot/backend:local
    entrypoint: echo
    command: 'Sorry I will not run, my destiny is to be built and die, see you in next run!'

  # 2. Database
  locoloot-storage:
    image: postgres:12
    env_file:
      - docker-compose.env
    ports:
      - 5432:5432
    volumes:
      - .pgdata:/data/postgres
    command: postgres -c 'max_connections=400'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U service" ]
      interval: 1s
      timeout: 1s
      retries: 5

  # 3. Migration
  locoloot-migration:
    image: locoloot/backend:local
    depends_on:
      locoloot-storage:
        condition: service_healthy
      locoloot-builder:
        condition: service_completed_successfully
    env_file:
      - .env
      - docker-compose.env
    volumes:
      - ./src/:/home/app/libs
    command: migrate

  # 4. Application, API and Admin
  locoloot-backend:
    image: locoloot/backend:local
    depends_on:
      locoloot-migration:
        condition: service_completed_successfully
    ports:
      - 8000:8000
    volumes:
      - ./src/:/home/app/libs
      - ./.log:/tmp/log
    env_file:
      - .env
      - docker-compose.env
